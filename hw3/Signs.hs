-- Малашенков Антон, гр. А3401

module Signs where

{-
 Будем считать “знаками препинания” в заданной строке следующие символы и последовательности символов:
 ".", ",", ";", ":", "?", "!", "...".
 Написать функцию signs :: String -> Int, которая подсчитывает количество знаков препинания в заданной
 строке. Каждые последовательные три точки считаются за один знак препинания, так что,
 например, в строке "......." (7 точек) имеется 3 знака препинания (два многоточия и точка).
 В строке "Hi, Bill! Bill?.. Oh, Bill..." всего 7 знаков препинания.
-}

import Data.List

-- принимает исходную строку и, для вычисления ответа, вызывает функцию signs',
-- разделяя строку на группы одинаковых символов
signs :: String -> Int
signs str = signs' (group str)

-- принимает список, разделённых на группы элементов и для каждой группы
-- вычисляет количество знаков припений в ней
signs' [] = 0
signs' (g:gs) = countPunctuationMarks g + (signs' gs)

-- принимает строку из одинаковых символов и, исходя их содержимого возвращает результат
countPunctuationMarks g
    | elem (head g) ",;:?!" = length g
    | elem (head g) "." = div (length g) 3 + mod (length g) 3
    | otherwise = 0

